(codev.suppressoutput)
(lcl num (nth 1000 (var coeftemp)) (nth 1000 (var coefbase)))
(lcl num (var max_cal) (var lcl_cal))

; SNRM
(if (eq (var q2d_lmfs_kind) :usr)
    (require :q2d_lmfs/cancel_coef_usr))

(set (num calibval) 1e-3)
(set (num curvval) 1.2e-05)

(codev.templens [(pim n)
                 (require `q2d_lmfs/measure_q2d_coef)
                 (usr usr_gen_snrm_calib (var q2d_lmfs_snrm)
                      (var q2d_lmfs_snrm_calib_x) (var q2d_lmfs_snrm_calib_y)
                      (var q2d_lmfs_snrm_calib_z) (var q2d_lmfs_mapsize))])

;; (codev.templens [(pim n)
;;                  (for [i 1 (var q2d_lmfs_coefcount)]
;;                    (set (nth (var i) q2d_lmfs_coefcalib) 1))
;;                  (require `q2d_lmfs/measure_q2d_coef)
;;                  (for [i 3 (var q2d_lmfs_coefcount)]
;;                    ;; (set (nth (var i) coefbase) (nth (var i) q2d_lmfs_coefmes))
;;                    (set (nth (var i) q2d_lmfs_coefgoal) (var calibval)))
;;                  (if (eq (var q2d_lmfs_kind) :usr)
;;                      ((require `q2d_lmfs/cancel_coef_usr) (require `q2d_lmfs/apply_goal_usr)))
;;                  (require `q2d_lmfs/measure_q2d_coef)
;;                  (for [i 3 (var q2d_lmfs_coefcount)]
;;                    (set (nth (var i) coeftemp) (nth (var i) q2d_lmfs_coefmes))
;;                    (set (nth (var i) q2d_lmfs_coefgoal) (* -1 (var calibval))))
;;                  (if (eq (var q2d_lmfs_kind) :usr)
;;                      ((require `q2d_lmfs/cancel_coef_usr) (require `q2d_lmfs/apply_goal_usr)))
;;                  (require `q2d_lmfs/measure_q2d_coef)
;;                  (for [i 3 (var q2d_lmfs_coefcount)]
;;                    (set (nth (var i) coeftemp)
;;                         (- (nth (var i) coeftemp)
;;                            (nth (var i) q2d_lmfs_coefmes)))
;;                    (set (nth (var i) q2d_lmfs_coefgoal) 0))
;;                  (for [i 3 (var q2d_lmfs_coefcount)]
;;                    (set (nth (var i) q2d_lmfs_coefcalib)
;;                         (/ (* 2 (var calibval)) (nth (var i) coeftemp))))])

(codev.templens [(pim n)
                 (for [i 3 50]
                   [(require :q2d_lmfs/cancel_coef_usr)
                    (umo ud1 (s (var q2d_lmfs_surn)) (c (var i)) (var calibval))
                    (require :q2d_lmfs/measure_q2d_coef)
                    (set (nth (var i) q2d_lmfs_coefcalib)
                         (/ (var calibval) (nth (var i) q2d_lmfs_coefmes)))
                    (umo ud1 (s (var q2d_lmfs_surn)) (c (var i)) 0)
                    (set (num calib_mean)
                         (+ (var calib_mean) (nth (var i) q2d_lmfs_coefcalib)))
                    (nil)])
                 (set calib_mean (/ (var calib_mean) (- 20 3)))
                 (for [i 50 (var q2d_lmfs_coefcount)]
                   (set (nth (var i) q2d_lmfs_coefcalib) (var calib_mean)))])

;; (for [i 3 (var q2d_lmfs_coefcount)]
;;   (set (nth (var i) q2d_lmfs_coefcalib) 1.4))

(codev.templens [(pim n)
                 (require `q2d_lmfs/apply_goal_usr)
                 (require `q2d_lmfs/measure_q2d_coef_curv)
                 (set (num curvbase) (var q2d_lmfs_curv))
                 (ciy (s (var q2d_lmfs_surn)) (var curvval))
                 (require `q2d_lmfs/measure_q2d_coef_curv)
                 (set (num curvtemp) (/ (- (var q2d_lmfs_curv) (var curvbase))
                                        2))
                 (ciy (s (var q2d_lmfs_surn)) (* -2 (var curvval)))
                 (require `q2d_lmfs/measure_q2d_coef_curv)
                 (set (num curvtemp)
                      (- (var curvtemp)
                         (/ (- (var q2d_lmfs_curv) (var curvbase)) 2)))
                 (if (eq (var curvtemp) 0)
                     (set (var q2d_lmfs_curvcalib) 1)
                     (set (var q2d_lmfs_curvcalib)
                          (/ (var curvval) (var curvtemp))))])
